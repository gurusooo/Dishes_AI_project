import telebot
from telebot import types
from model_embedding import load_model, preprocess_image, predict
from PIL import Image
import io

MODEL_PATH = '../food101_model.h5'
model = load_model(MODEL_PATH)
bot = telebot.TeleBot('BOT-TOKEN')

@bot.message_handler(commands=['start'])
def start(message):

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã")
    markup.add(btn1)
    bot.send_message(message.from_user.id, f"üëã –ü—Ä–∏–≤–µ—Ç {message.from_user.first_name}!", reply_markup=markup)

@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    try:
        file_info = bot.get_file(message.photo[-1].file_id)
        downloaded_file = bot.download_file(file_info.file_path)

        image = Image.open(io.BytesIO(downloaded_file))

        image_array = preprocess_image(image)
        
        predictions = predict(model, image_array)

        response = "–í–µ—Ä–æ—è—Ç–Ω–æ, —ç—Ç–æ:\n"
        for i, (class_id, class_name, confidence) in enumerate(predictions):
            response += f"{i + 1}. {class_name} ({(confidence * 100):.2f}%)\n"

        bot.reply_to(message, response)
    except Exception as e:
        bot.reply_to(message, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")

@bot.message_handler(content_types=['text'])
def get_text_messages(message):

    if message.text == '–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True) 
        btn1 = types.KeyboardButton('–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?')
        btn2 = types.KeyboardButton('–û–ø—Ä–µ–¥–µ–ª–∏ –µ–¥—É –ø–æ —Ñ–æ—Ç–æ.')
        markup.add(btn1, btn2)
        bot.send_message(message.from_user.id, '–ß—Ç–æ –í—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?', reply_markup=markup)


    elif message.text == '–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?':
        bot.send_message(message.from_user.id, '–Ø –Ω–µ–±–æ–ª—å—à–æ–π –±–æ—Ç, —Å–æ–∑–¥–∞–Ω–Ω—ã–π –¥—É–µ—Ç–æ–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –±–ª—é–¥ –ø–æ —Ñ–æ—Ç–æ, —è –≤—ã–≤–æ–∂—É —Ç—Ä–∏ —Å–∞–º—ã—Ö –≤–µ—Ä–æ—è—Ç–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–∏. –û–±—Ä–∞—â–∞–π—Ç–µ—Å—å, –±—É–¥—É —Ä–∞–¥ –ø–æ–º–æ—á—å!', parse_mode='Markdown')

    elif message.text == '–û–ø—Ä–µ–¥–µ–ª–∏ –µ–¥—É –ø–æ —Ñ–æ—Ç–æ.':
        bot.send_message(message.from_user.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –±–ª—é–¥–∞, –∏ —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –µ–≥–æ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å.', parse_mode='Markdown')
        bot.register_next_step_handler(message, handle_photo)

bot.polling(none_stop=True, interval=0)